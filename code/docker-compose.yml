version: "2"
networks:
    ech-network:
        driver: bridge
services:
    traefik:
        image: "traefik:v2.1"
        container_name: "traefik"
        command:
          #- "--log.level=DEBUG"
          - "--api.insecure=true"
          - "--providers.docker=true"
          - "--providers.docker.exposedbydefault=false"
          - "--entrypoints.web.address=:80"
        ports:
          - "80:80"
          - "8080:8080"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock:ro"
        networks:
          - ech-network
    ech-frontend:
        image: ech-frontend:latest
        restart: always
        volumes:
            - ./ech-frontend:/ech-frontend
            - /ech-frontend/node_modules
            - /ech-frontend/code-hub-frontend
        links:
            - ech-backend
        depends_on:
            - ech-backend
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.ech-frontend.rule=Host(`ech-frontend.localhost`)"
            - "traefik.http.routers.ech-frontend.entrypoints=web"
        networks:
            - ech-network
    ech-backend:
        image: ech-backend:latest
        restart: always
        volumes:
            - ./ech-backend:/ech-backend
            - /ech-backend/node_modules
        depends_on:
            - mongodb
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.ech-backend.rule=Host(`ech-backend.localhost`)"
            - "traefik.port=5000"
        networks:
            - ech-network
    mongodb:
        image: mongo
        restart: always
        container_name: mongodb
        volumes:
            - ./data-node:/data/db
        ports:
            - 27017:27017
        command: mongod --noauth
        networks:
            - ech-network